Анализ состояния памяти при запуске job4j_tracker. Для анализа используется утилита jconsole.

Первый вариант. Garbage collector G1 без каких либо ограничений размера Heap space.
Committed memory (выделенная память) 98 304 kbytes
Max 1 558 528 kbytes.
1) При "простое в работе"(не выполняются какие-либо операции по добавлению, получению и удалению данных)
Current heap size: 11 658 kbytes (среднее 8 706 kbytes).
2) Добавление заявок (объектов) в размере 100 000 экземпляров
Current heap size: пиковое значение 62 мбайта, после выполнения операции 36 мбайтов.
3) Получение (вывод в консоль всех вставленных на предыдущем шаге объектов) объектов
Current heap size: пиковое значение 75 мбайт, после выполнения операции 63 мбайта.
4) удаление объектов из job4j_tracker
Current heap size: пиковое значение 105-107 мбайт, после выполнения операции 51 мбайт
В процессе выполнения удаления увеличился объем выделенной памяти было 98 мбайт стало 20 мбайт.

Второй вариант анализа состояния Heap при параметрах -Xmx90m -Xms90m (GC G1 как и в первом варианте).
Committed memory (выделенная память) 92 160 kbytes
Max 92 160 kbytes.
1) Данный шаг пропущен...(результат, как и в предыдущем варианте)
2) Добавление заявок (объектов) в размере 100 000 экземпляров
Current heap size: пиковое значение 58 мбайта, после выполнения операции 15 мбайтов.
3) Получение (вывод в консоль всех вставленных на предыдущем шаге объектов) объектов
Current heap size: пиковое значение 69 мбайта, после выполнения операции 42 мбайтов.
4) удаление объектов из job4j_tracker
Current heap size: пиковое значение 62-65 мбайт, после выполнения операции 20 мбайт.

Третий вариант анализа Heap при параметрах -Xmx20m -Xms20m
Операция добавления 100000 в объектов в job4j_tracker была выполнена без проблем.
При выполнении удаления всех объектов программа выбросила исключение java.lang.OutOfMemoryError: Java heap space.

